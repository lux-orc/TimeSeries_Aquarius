{
    "type": [
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "folder_name",
        "[1] \"dLL\"\n",
        "> ",
        "csv_names",
        "[1] \"Lake+Level.Telemetry@EM220.csv\" \"Lake+Level.Telemetry@EM507.csv\" \"Lake+Level.Telemetry@EM639.csv\"\n",
        "> ",
        "csv_paths",
        "[1] \"./out/csv/dLL/Lake+Level.Telemetry@EM220.csv\" \"./out/csv/dLL/Lake+Level.Telemetry@EM507.csv\"\n[3] \"./out/csv/dLL/Lake+Level.Telemetry@EM639.csv\"\n",
        "> ",
        "csv_path",
        "[1] \"./out/csv/dLL/Lake+Level.Telemetry@EM639.csv\"\n",
        "> ",
        "    ts_i <- fread(f, colClasses = list(character = \"TimeStamp\"))",
        "Error: object 'f' not found\n",
        "> ",
        "csv_path",
        "[1] \"./out/csv/dLL/Lake+Level.Telemetry@EM639.csv\"\n",
        "> ",
        "ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "> ",
        "ts_df",
        "NULL\n",
        "> ",
        "ts_i",
        "                 TimeStamp Lake Level@EM639\n                    <char>            <num>\n    1: 1962-11-28 00:00:00         309.9553\n    2: 1962-11-29 00:00:00         309.9401\n    3: 1962-11-30 00:00:00         309.9220\n    4: 1962-12-01 00:00:00         309.8983\n    5: 1962-12-02 00:00:00         309.8850\n   ---                                     \n22361: 2024-02-16 00:00:00         309.9349\n22362: 2024-02-17 00:00:00         309.9266\n22363: 2024-02-18 00:00:00         309.9094\n22364: 2024-02-19 00:00:00  ",
        "       309.9051\n22365: 2024-02-20 00:00:00         309.8844\n",
        "> ",
        "ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "> ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "> ",
        "    id_param <- names(ts_i)[2]",
        "> ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "> ",
        "    param <- param_id_list[[1]]",
        "> ",
        "    plate <- param_id_list[[2]]",
        "> ",
        "    site <- plate_info[plate, Site]",
        "> ",
        "    unit <- param_info[param, Unit]",
        "> ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "> ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "> ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "> ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "> ",
        "ts_df",
        "                 TimeStamp    Value   Unit                    ID_full      Param    Source     ID\n                    <char>    <num> <char>                     <char>     <char>    <char> <char>\n    1: 1962-11-28 00:00:00 309.9553      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    2: 1962-11-29 00:00:00 309.9401      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    3: 1962-11-30 00:00:00 309.9220      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    4: 1962-12-01 00:0",
        "0:00 309.8983      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    5: 1962-12-02 00:00:00 309.8850      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n   ---                                                                                           \n22120: 2024-02-16 00:00:00 309.9349      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22121: 2024-02-17 00:00:00 309.9266      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22122: 2024-02-18 00:00:00 309.9094      m L",
        "ake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22123: 2024-02-19 00:00:00 309.9051      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22124: 2024-02-20 00:00:00 309.8844      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n                                       Site\n                                     <char>\n    1: Lake Wakatipu at Willow Place (NIWA)\n    2: Lake Wakatipu at Willow Place (NIWA)\n    3: Lake Wakatipu at Willow Place (NIWA)\n    4: Lake Wakatipu at Willow Place (NIWA",
        ")\n    5: Lake Wakatipu at Willow Place (NIWA)\n   ---                                     \n22120: Lake Wakatipu at Willow Place (NIWA)\n22121: Lake Wakatipu at Willow Place (NIWA)\n22122: Lake Wakatipu at Willow Place (NIWA)\n22123: Lake Wakatipu at Willow Place (NIWA)\n22124: Lake Wakatipu at Willow Place (NIWA)\n",
        "> ",
        "path_folder",
        "[1] \"./out/csv/dLL\"\n",
        "> ",
        "csv_path",
        "[1] \"./out/csv/dLL/Lake+Level.Telemetry@EM639.csv\"\n",
        "> ",
        "  file_2_save <- file.path(path_out, paste0(folder_name, \".parquet\"))",
        "> ",
        "  # List the data availability",
        "> ",
        "file_2_save",
        "[1] \"./out/dLL.parquet\"\n",
        "> ",
        "ts_df",
        "                 TimeStamp    Value   Unit                    ID_full      Param    Source     ID\n                    <char>    <num> <char>                     <char>     <char>    <char> <char>\n    1: 1962-11-28 00:00:00 309.9553      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    2: 1962-11-29 00:00:00 309.9401      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    3: 1962-11-30 00:00:00 309.9220      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    4: 1962-12-01 00:0",
        "0:00 309.8983      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n    5: 1962-12-02 00:00:00 309.8850      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n   ---                                                                                           \n22120: 2024-02-16 00:00:00 309.9349      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22121: 2024-02-17 00:00:00 309.9266      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22122: 2024-02-18 00:00:00 309.9094      m L",
        "ake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22123: 2024-02-19 00:00:00 309.9051      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n22124: 2024-02-20 00:00:00 309.8844      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n                                       Site\n                                     <char>\n    1: Lake Wakatipu at Willow Place (NIWA)\n    2: Lake Wakatipu at Willow Place (NIWA)\n    3: Lake Wakatipu at Willow Place (NIWA)\n    4: Lake Wakatipu at Willow Place (NIWA",
        ")\n    5: Lake Wakatipu at Willow Place (NIWA)\n   ---                                     \n22120: Lake Wakatipu at Willow Place (NIWA)\n22121: Lake Wakatipu at Willow Place (NIWA)\n22122: Lake Wakatipu at Willow Place (NIWA)\n22123: Lake Wakatipu at Willow Place (NIWA)\n22124: Lake Wakatipu at Willow Place (NIWA)\n",
        "> ",
        "parquet_2_save",
        "Error: object 'parquet_2_save' not found\n",
        "> ",
        "  parquet_2_save <- file.path(path_out, paste0(folder_name, \".parquet\"))",
        "> ",
        "parquet_2_save",
        "[1] \"./out/dLL.parquet\"\n",
        "> ",
        "path_folder",
        "[1] \"./out/csv/dLL\"\n",
        "> ",
        "\"All data from \" path_folder",
        "Error: unexpected symbol in \"\"All data from \" path_folder\"\n",
        "> ",
        "path_folder",
        "[1] \"./out/csv/dLL\"\n",
        "> ",
        "paste0(folder_name, \".parquet\")",
        "[1] \"dLL.parquet\"\n",
        "> ",
        "parquet_2_save",
        "[1] \"./out/dLL.parquet\"\n",
        "> ",
        "  paste0(\"All data from folder \", path_folder, \" has been saved as \", parquet_2_save)",
        "[1] \"All data from folder ./out/csv/dLL has been saved as ./out/dLL.parquet\"\n",
        "> ",
        "paste0(\"All data from folder <\", path_folder, \"> has been saved as \", parquet_2_save)",
        "[1] \"All data from folder <./out/csv/dLL> has been saved as ./out/dLL.parquet\"\n",
        "> ",
        "paste0(folder_name, \".parquet\")",
        "[1] \"dLL.parquet\"\n",
        "> ",
        "  paste0(\"All data from folder <\", path_folder, \"> has been saved as \", parquet_name, \" in folder \", path_out)",
        "Error: object 'parquet_name' not found\n",
        "> ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "> ",
        "  paste0(\"All data from folder <\", path_folder, \"> has been saved as \", parquet_name, \" in folder \", path_out)",
        "[1] \"All data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n",
        "> ",
        "cp",
        "function(s = \"\", display = 0, fg = 39, bg = 48) {\n  # Colour print in the (RStudio) console for an object.\n  #\n  # Args:\n  #   s: An object, default is an empty character (\"\").\n  #   display, default = 0:\n  #     - 0: default\n  #     - 1: highlight\n  #     - 2: blur\n  #     - 3: italic\n  #     - 4: underline\n  #     - 5: flash?\n  #     - 7: inverse?\n  #     - 8: hide\n  #     - 9: strikethrough\n  #     - 22: non-bold\n  #     - 24: non-underline\n  #     - 25: non-flash?\n  #     - 27: non-inverse?\n  #   fg (fo",
        "reground), default = 39:\n  #     - 30: black\n  #     - 31: red\n  #     - 32: green\n  #     - 33: yellow\n  #     - 34: blue\n  #     - 35: magenta\n  #     - 36: cyan\n  #     - 37: white\n  #     - 38: delete and pause\n  #   bg (background), default = 48:\n  #     - 40: black\n  #     - 41: red\n  #     - 42: green\n  #     - 43: yellow\n  #     - 44: blue\n  #     - 45: magenta\n  #     - 46: cyan\n  #     - 47: white\n  #\n  # Return:\n  #   A string for color print in the console.\n  #\n  # Notes:\n  #   stackoverflow.com",
        "/questions/287871/how-do-i-print-colored-text-to-the-terminal\n  x <- paste(utils::capture.output(s), \"\\n\", sep = \"\")\n  x[1] <- paste0(\" \", x[1])\n  return(paste0(\"\\033[\", display, \";\", fg, \";\", bg, \"m\", x, \"\\033[0m\"))\n}\n",
        "> ",
        "cp(\"1\", \"2\")",
        "[1] \"\\033[2;39;48m [1] \\\"1\\\"\\n\\033[0m\"\n",
        "> ",
        "cp(\"1\", \"2\", fg=36)",
        "[1] \"\\033[2;36;48m [1] \\\"1\\\"\\n\\033[0m\"\n",
        "> ",
        "cp(\"1\", \"2\", fg = 33)",
        "[1] \"\\033[2;33;48m [1] \\\"1\\\"\\n\\033[0m\"\n",
        "> ",
        "cat(cp(\"1\", \"2\", fg = 33))",
        "\u001B[2;33;48m [1] \"1\"\n\u001B[0m",
        "> ",
        "cat(cp(\"1\", \"2\", display = 0, bg = 48, fg = 33))",
        "Error in cp(\"1\", \"2\", display = 0, bg = 48, fg = 33) : \n  unused argument (\"2\")\n",
        "> ",
        "cat(cp(\"12\", display = 0, bg = 48, fg = 33))",
        "\u001B[0;33;48m [1] \"12\"\n\u001B[0m",
        "> ",
        "cat(cp(\"12\", display = 3, bg = 48, fg = 33))",
        "\u001B[3;33;48m [1] \"12\"\n\u001B[0m",
        "> ",
        "cat(cp(\"12\", display = 2, bg = 48, fg = 33))",
        "\u001B[2;33;48m [1] \"12\"\n\u001B[0m",
        "> ",
        "  paste0(",
        "+ ",
        "    \"All data from folder\",",
        "+ ",
        "    \"<\", path_folder, \">\",",
        "+ ",
        "    \"has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "[1] \"All data from folder<./out/csv/dLL>has been saved as dLL.parquet in folder ./out\"\n",
        "> ",
        "parquet_name",
        "[1] \"dLL.parquet\"\n",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"All data from folder\",",
        "+ ",
        "    cp(paste0(\"<\", path_folder, \">\"), fg = 33),",
        "+ ",
        "    \" has been saved as\",",
        "+ ",
        "    cp(parquet_name, display = 1, fg = 32),",
        "+ ",
        "    \" in folder\",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "> ",
        "msg",
        "[1] \"All data from folder\\033[0;33;48m [1] \\\"<./out/csv/dLL>\\\"\\n\\033[0m has been saved as\\033[1;32;48m [1] \\\"dLL.parquet\\\"\\n\\033[0m in folder./out\"\n",
        "> ",
        "cat(msg)",
        "All data from folder\u001B[0;33;48m [1] \"<./out/csv/dLL>\"\n\u001B[0m has been saved as\u001B[1;32;48m [1] \"dLL.parquet\"\n\u001B[0m in folder./out",
        "> ",
        "paste0(\"<\", path_folder, \">\")",
        "[1] \"<./out/csv/dLL>\"\n",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"All data from folder\",",
        "+ ",
        "    cp(path_folder, fg = 33),",
        "+ ",
        "    \" has been saved as\",",
        "+ ",
        "    cp(parquet_name, display = 1, fg = 32),",
        "+ ",
        "    \" in folder\",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "> ",
        "cat(msg)",
        "All data from folder\u001B[0;33;48m [1] \"./out/csv/dLL\"\n\u001B[0m has been saved as\u001B[1;32;48m [1] \"dLL.parquet\"\n\u001B[0m in folder./out",
        "> ",
        " paste0(",
        "+ ",
        "    \"All data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as\",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder\",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "[1] \"All data from folder <./out/csv/dLL> has been saved asdLL.parquet in folder./out\"\n",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"All data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"All data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "> ",
        "cat(cp(msg), fg = 33)",
        "\u001B[0;39;48m [1] \"All data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n\u001B[0m 33",
        "> ",
        "cat(cp(msg, fg = 33))",
        "\u001B[0;33;48m [1] \"All data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n\u001B[0m",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out,",
        "+ ",
        "  )",
        "Error in paste0(\"\\nAll data from folder <\", path_folder, \"> has been saved as \",  : \n  argument is missing, with no default\n",
        "> ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "> ",
        "cat(cp(msg, fg = 33))",
        "\u001B[0;33;48m [1] \"\\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n\u001B[0m",
        "> ",
        "rm(list = ls(all.names = TRUE))",
        "> ",
        "> ",
        "library(httr)  # Useful tools for working with HTTP organised by HTTP verbs",
        "> ",
        "library(data.table)  # Fast operations on large data frames",
        "> ",
        "> ",
        "source(\"_tools/fun_s.R\")  # Load the customised functions and set time zone as \"Etc/GMT-12\"",
        "> ",
        "> ",
        "> ",
        "# # Remove the negative values (data gaps)",
        "> ",
        "# neg_2_na <- function(x) return(fifelse(x >= 0, x, NA_real_))",
        "> ",
        "> ",
        "# Set up the path of the project folder",
        "> ",
        "path <- \".\"",
        "> ",
        "path_out <- file.path(path, \"out\")",
        "> ",
        "path_csv <- file.path(path_out, \"csv\")",
        "> ",
        "> ",
        "> ",
        "# Load the reference list between the plate numbers and the site names",
        "> ",
        "path_info <- file.path(path, \"info\")",
        "> ",
        "plate_info <- fread(file.path(path_info, \"plate_info.csv\"), key = \"ID\")",
        "> ",
        "param_info <- fread(file.path(path_info, \"param_info.csv\"), key = \"Param\")",
        "> ",
        "> ",
        "> ",
        "# Detect the folders in '/out/csv' folder",
        "> ",
        "path_folders <- list.dirs(path_csv, recursive = FALSE, full.names = TRUE)",
        "> ",
        "> ",
        "# For each folder, read the csv data files",
        "> ",
        "for (path_folder in path_folders) {",
        "+ ",
        "  csv_paths <- list.files(path_folder, recursive = FALSE, full.names = TRUE)",
        "+ ",
        "  csv_names <- list.files(path_folder, recursive = FALSE, full.names = FALSE)",
        "+ ",
        "  folder_name <- sub(pattern = paste0(path_csv, \"/\"), replacement = \"\", x = path_folder)",
        "+ ",
        "  if (!length(csv_names)) {",
        "+ ",
        "    message(\"\\nNo CSV data files in folder <\", path_folder, \">\\n\", sep = \"\")",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        "  ts_df <- NULL",
        "+ ",
        "  for (csv_path in csv_paths) {",
        "+ ",
        "    ",
        "+ ",
        "    ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "+ ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "+ ",
        "    id_param <- names(ts_i)[2]",
        "+ ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "+ ",
        "    param <- param_id_list[[1]]",
        "+ ",
        "    plate <- param_id_list[[2]]",
        "+ ",
        "    site <- plate_info[plate, Site]",
        "+ ",
        "    unit <- param_info[param, Unit]",
        "+ ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "+ ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "+ ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "+ ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "+ ",
        "  }",
        "+ ",
        "  # Save the data from this folder",
        "+ ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "+ ",
        "  parquet_2_save <- file.path(path_out, parquet_name)",
        "+ ",
        "  arrow::write_parquet(ts_df, parquet_2_save)",
        "+ ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "+ ",
        "+ ",
        "}",
        "> ",
        "path_folders <- list.dirs(path_csv, recursive = FALSE, full.names = TRUE)",
        "> ",
        "> ",
        "# For each folder, read the csv data files",
        "> ",
        "for (path_folder in path_folders) {",
        "+ ",
        "  csv_paths <- list.files(path_folder, recursive = FALSE, full.names = TRUE)",
        "+ ",
        "  csv_names <- list.files(path_folder, recursive = FALSE, full.names = FALSE)",
        "+ ",
        "  folder_name <- sub(pattern = paste0(path_csv, \"/\"), replacement = \"\", x = path_folder)",
        "+ ",
        "  if (!length(csv_names)) {",
        "+ ",
        "    message(\"\\nNo CSV data files in folder <\", path_folder, \">\\n\", sep = \"\")",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        "  ts_df <- NULL",
        "+ ",
        "  for (csv_path in csv_paths) {",
        "+ ",
        "    ",
        "+ ",
        "    ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "+ ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "+ ",
        "    id_param <- names(ts_i)[2]",
        "+ ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "+ ",
        "    param <- param_id_list[[1]]",
        "+ ",
        "    plate <- param_id_list[[2]]",
        "+ ",
        "    site <- plate_info[plate, Site]",
        "+ ",
        "    unit <- param_info[param, Unit]",
        "+ ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "+ ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "+ ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "+ ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "+ ",
        "  }",
        "+ ",
        "  # Save the data from this folder",
        "+ ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "+ ",
        "  parquet_2_save <- file.path(path_out, parquet_name)",
        "+ ",
        "  arrow::write_parquet(ts_df, parquet_2_save)",
        "+ ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "+ ",
        "  cat(cp(msg, display = 3, fg = 33))",
        "+ ",
        "}",
        "\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/dStage> has been saved as dSta",
        "ge.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\"\n\u001B[0m\u001B[3;33;48m [1] \"\\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out\"\n\u001B[0m",
        "> ",
        "# For each folder, read the csv data files",
        "> ",
        "for (path_folder in path_folders) {",
        "+ ",
        "  csv_paths <- list.files(path_folder, recursive = FALSE, full.names = TRUE)",
        "+ ",
        "  csv_names <- list.files(path_folder, recursive = FALSE, full.names = FALSE)",
        "+ ",
        "  folder_name <- sub(pattern = paste0(path_csv, \"/\"), replacement = \"\", x = path_folder)",
        "+ ",
        "  if (!length(csv_names)) {",
        "+ ",
        "    message(\"\\nNo CSV data files in folder <\", path_folder, \">\\n\", sep = \"\")",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        "  ts_df <- NULL",
        "+ ",
        "  for (csv_path in csv_paths) {",
        "+ ",
        "    ",
        "+ ",
        "    ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "+ ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "+ ",
        "    id_param <- names(ts_i)[2]",
        "+ ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "+ ",
        "    param <- param_id_list[[1]]",
        "+ ",
        "    plate <- param_id_list[[2]]",
        "+ ",
        "    site <- plate_info[plate, Site]",
        "+ ",
        "    unit <- param_info[param, Unit]",
        "+ ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "+ ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "+ ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "+ ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "+ ",
        "  }",
        "+ ",
        "  # Save the data from this folder",
        "+ ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "+ ",
        "  parquet_2_save <- file.path(path_out, parquet_name)",
        "+ ",
        "  arrow::write_parquet(ts_df, parquet_2_save)",
        "+ ",
        "  msg <- paste0(",
        "+ ",
        "    \"All data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "+ ",
        "  cat(cp(msg, display = 3, fg = 33), sep = \"\\n\\n\")",
        "+ ",
        "}",
        "\u001B[3;33;48m [1] \"All data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/dStage> has been saved as dStage.par",
        "quet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\"\n\u001B[0m\n\u001B[3;33;48m [1] \"All data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out\"\n\u001B[0m\n",
        "> ",
        "rm(list = ls(all.names = TRUE))",
        "> ",
        "> ",
        "library(httr)  # Useful tools for working with HTTP organised by HTTP verbs",
        "> ",
        "library(data.table)  # Fast operations on large data frames",
        "> ",
        "> ",
        "source(\"_tools/fun_s.R\")  # Load the customised functions and set time zone as \"Etc/GMT-12\"",
        "> ",
        "> ",
        "> ",
        "# # Remove the negative values (data gaps)",
        "> ",
        "# neg_2_na <- function(x) return(fifelse(x >= 0, x, NA_real_))",
        "> ",
        "> ",
        "# Set up the path of the project folder",
        "> ",
        "path <- \".\"",
        "> ",
        "path_out <- file.path(path, \"out\")",
        "> ",
        "path_csv <- file.path(path_out, \"csv\")",
        "> ",
        "> ",
        "> ",
        "# Load the reference list between the plate numbers and the site names",
        "> ",
        "path_info <- file.path(path, \"info\")",
        "> ",
        "plate_info <- fread(file.path(path_info, \"plate_info.csv\"), key = \"ID\")",
        "> ",
        "param_info <- fread(file.path(path_info, \"param_info.csv\"), key = \"Param\")",
        "> ",
        "> ",
        "> ",
        "# Detect the folders in '/out/csv' folder",
        "> ",
        "path_folders <- list.dirs(path_csv, recursive = FALSE, full.names = TRUE)",
        "> ",
        "> ",
        "# For each folder, read the csv data files",
        "> ",
        "for (path_folder in path_folders) {",
        "+ ",
        "  csv_paths <- list.files(path_folder, recursive = FALSE, full.names = TRUE)",
        "+ ",
        "  csv_names <- list.files(path_folder, recursive = FALSE, full.names = FALSE)",
        "+ ",
        "  folder_name <- sub(pattern = paste0(path_csv, \"/\"), replacement = \"\", x = path_folder)",
        "+ ",
        "  if (!length(csv_names)) {",
        "+ ",
        "    message(\"\\nNo CSV data files in folder <\", path_folder, \">\\n\", sep = \"\")",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        "  ts_df <- NULL",
        "+ ",
        "  for (csv_path in csv_paths) {",
        "+ ",
        "    ",
        "+ ",
        "    ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "+ ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "+ ",
        "    id_param <- names(ts_i)[2]",
        "+ ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "+ ",
        "    param <- param_id_list[[1]]",
        "+ ",
        "    plate <- param_id_list[[2]]",
        "+ ",
        "    site <- plate_info[plate, Site]",
        "+ ",
        "    unit <- param_info[param, Unit]",
        "+ ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "+ ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "+ ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "+ ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "+ ",
        "  }",
        "+ ",
        "  # Save the data from this folder",
        "+ ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "+ ",
        "  parquet_2_save <- file.path(path_out, parquet_name)",
        "+ ",
        "  arrow::write_parquet(ts_df, parquet_2_save)",
        "+ ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "+ ",
        "  message(msg)",
        "+ ",
        "}",
        "\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\n\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\n\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\n\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\n\nAll data from folder <./out/csv/dStage> has been saved as dStage.parquet in folder ./out\n\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folde",
        "r ./out\n\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\n\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out\n",
        "> ",
        "rm(list = ls(all.names = TRUE))",
        "> ",
        "> ",
        "library(httr)  # Useful tools for working with HTTP organised by HTTP verbs",
        "> ",
        "library(data.table)  # Fast operations on large data frames",
        "> ",
        "> ",
        "source(\"_tools/fun_s.R\")  # Load the customised functions and set time zone as \"Etc/GMT-12\"",
        "> ",
        "> ",
        "> ",
        "# # Remove the negative values (data gaps)",
        "> ",
        "# neg_2_na <- function(x) return(fifelse(x >= 0, x, NA_real_))",
        "> ",
        "> ",
        "# Set up the path of the project folder",
        "> ",
        "path <- \".\"",
        "> ",
        "path_out <- file.path(path, \"out\")",
        "> ",
        "path_csv <- file.path(path_out, \"csv\")",
        "> ",
        "> ",
        "> ",
        "# Load the reference list between the plate numbers and the site names",
        "> ",
        "path_info <- file.path(path, \"info\")",
        "> ",
        "plate_info <- fread(file.path(path_info, \"plate_info.csv\"), key = \"ID\")",
        "> ",
        "param_info <- fread(file.path(path_info, \"param_info.csv\"), key = \"Param\")",
        "> ",
        "> ",
        "> ",
        "# Detect the folders in '/out/csv' folder",
        "> ",
        "path_folders <- list.dirs(path_csv, recursive = FALSE, full.names = TRUE)",
        "> ",
        "> ",
        "# For each folder, read the csv data files",
        "> ",
        "for (path_folder in path_folders) {",
        "+ ",
        "  csv_paths <- list.files(path_folder, recursive = FALSE, full.names = TRUE)",
        "+ ",
        "  csv_names <- list.files(path_folder, recursive = FALSE, full.names = FALSE)",
        "+ ",
        "  folder_name <- sub(pattern = paste0(path_csv, \"/\"), replacement = \"\", x = path_folder)",
        "+ ",
        "  if (!length(csv_names)) {",
        "+ ",
        "    message(\"\\nNo CSV data files in folder <\", path_folder, \">\\n\", sep = \"\")",
        "+ ",
        "    next",
        "+ ",
        "  }",
        "+ ",
        "  ts_df <- NULL",
        "+ ",
        "  for (csv_path in csv_paths) {",
        "+ ",
        "    ",
        "+ ",
        "    ts_i <- fread(csv_path, colClasses = list(character = \"TimeStamp\"))",
        "+ ",
        "    id_full <- tstrsplit(utils::read.csv(csv_path, skip = 5, nrows = 1)[1, 1], \": \")[[2]]",
        "+ ",
        "    id_param <- names(ts_i)[2]",
        "+ ",
        "    param_id_list <- tstrsplit(id_param, \"@\")",
        "+ ",
        "    param <- param_id_list[[1]]",
        "+ ",
        "    plate <- param_id_list[[2]]",
        "+ ",
        "    site <- plate_info[plate, Site]",
        "+ ",
        "    unit <- param_info[param, Unit]",
        "+ ",
        "    source <-",
        "+ ",
        "      paste0(param, \".\") |>",
        "+ ",
        "      gsub(replacement = \"\", id_full) |>",
        "+ ",
        "      gsub(pattern = paste0(\"@\", plate), replacement = \"\", x = _)",
        "+ ",
        "    ts_i[, let(",
        "+ ",
        "      Unit = unit,",
        "+ ",
        "      ID_full = id_full,",
        "+ ",
        "      Param = param,",
        "+ ",
        "      Source = source,",
        "+ ",
        "      ID = plate,",
        "+ ",
        "      Site = site",
        "+ ",
        "    )]",
        "+ ",
        "    setnames(ts_i, old = id_param, new = \"Value\")",
        "+ ",
        "    ts_df <- rbindlist(list(ts_df, na.omit(ts_i, cols = \"Value\")))",
        "+ ",
        "  }",
        "+ ",
        "  # Save the data from this folder",
        "+ ",
        "  parquet_name <- paste0(folder_name, \".parquet\")",
        "+ ",
        "  parquet_2_save <- file.path(path_out, parquet_name)",
        "+ ",
        "  arrow::write_parquet(ts_df, parquet_2_save)",
        "+ ",
        "  msg <- paste0(",
        "+ ",
        "    \"\\nAll data from folder <\",",
        "+ ",
        "    path_folder,",
        "+ ",
        "    \"> has been saved as \",",
        "+ ",
        "    parquet_name,",
        "+ ",
        "    \" in folder \",",
        "+ ",
        "    path_out",
        "+ ",
        "  )",
        "+ ",
        "  cat(msg)",
        "+ ",
        "}",
        "\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\nAll data from folder <./out/csv/dStage> has been saved as dStage.parquet in folder ./out\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folder ./o",
        "ut\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\nAll data from folder <./out/csv/dStage> has been saved as dStage.parquet in folder ./out\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folder ./o",
        "ut\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder ./out\n\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder ./out\n\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder ./out\n\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder ./out\n\nAll data from folder <./out/csv/dStage> has been saved as dStage.parquet in folder ./out\n\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parquet in folde",
        "r ./out\n\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder ./out\n\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder ./out\n",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as dFlo.parquet in folder <./out>\n\nAll data from folder <./out/csv/dGWL> has been saved as dGWL.parquet in folder <./out>\n\nAll data from folder <./out/csv/dLL> has been saved as dLL.parquet in folder <./out>\n\nAll data from folder <./out/csv/dRain> has been saved as dRain.parquet in folder <./out>\n\nAll data from folder <./out/csv/dStage> has been saved as dStage.parquet in folder <./out>\n\nAll data from folder <./out/csv/hFlo> has been saved as hFlo.parque",
        "t in folder <./out>\n\nAll data from folder <./out/csv/hRain> has been saved as hRain.parquet in folder <./out>\n\nAll data from folder <./out/csv/misc_dMean> has been saved as misc_dMean.parquet in folder <./out>\n",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/hFlo> has been saved as \"",
        "hFlo.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>\n",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "All data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\nAll data from folder <./out/csv/hFlo> has been saved as \"hFlo.p",
        "arquet\" in folder <./out>\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>\n",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "All data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\nAll data from folder <./out/csv/hFlo> has been saved as \"hFlo.p",
        "arquet\" in folder <./out>\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>\n",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\nAll data from folder <./out/csv/hFlo> has been saved as \"hFlo.",
        "parquet\" in folder <./out>\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\nAll data from folder <./out/csv/hFlo> has been saved as \"hFlo.",
        "parquet\" in folder <./out>\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\nAll data from folder <./out/csv/hFlo> has been saved as \"hFlo.",
        "parquet\" in folder <./out>\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>",
        "> ",
        "source(\"C:/Users/lux/OneDrive - Otago Regional Council/r_py/myScript/_ts_AQ/scripts/R/2_run_after_pwsh_script.R\")",
        "\nAll data from folder <./out/csv/dFlo> has been saved as \"dFlo.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dGWL> has been saved as \"dGWL.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dLL> has been saved as \"dLL.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dRain> has been saved as \"dRain.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/dStage> has been saved as \"dStage.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/hFlo> has been saved as \"",
        "hFlo.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/hRain> has been saved as \"hRain.parquet\" in folder <./out>\n\nAll data from folder <./out/csv/misc_dMean> has been saved as \"misc_dMean.parquet\" in folder <./out>\n",
        "> ",
        "arrows::read_parquet(\"out/dLL.parquet\")",
        "Error in loadNamespace(x) : there is no package called ‘arrows’\n",
        "> ",
        "arrow::read_parquet(\"out/dLL.parquet\")",
        "                 TimeStamp    Value   Unit                    ID_full      Param    Source     ID\n                    <char>    <num> <char>                     <char>     <char>    <char> <char>\n    1: 1933-02-01 00:00:00 277.8442      m Lake Level.Telemetry@EM220 Lake Level Telemetry  EM220\n    2: 1933-02-02 00:00:00 278.0917      m Lake Level.Telemetry@EM220 Lake Level Telemetry  EM220\n    3: 1933-02-03 00:00:00 278.1570      m Lake Level.Telemetry@EM220 Lake Level Telemetry  EM220\n    4: 1933-02-04 00:0",
        "0:00 278.1231      m Lake Level.Telemetry@EM220 Lake Level Telemetry  EM220\n    5: 1933-02-05 00:00:00 278.0732      m Lake Level.Telemetry@EM220 Lake Level Telemetry  EM220\n   ---                                                                                           \n89505: 2024-02-16 00:00:00 309.9349      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n89506: 2024-02-17 00:00:00 309.9266      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n89507: 2024-02-18 00:00:00 309.9094      m L",
        "ake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n89508: 2024-02-19 00:00:00 309.9051      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n89509: 2024-02-20 00:00:00 309.8844      m Lake Level.Telemetry@EM639 Lake Level Telemetry  EM639\n                                       Site\n                                     <char>\n    1:              Lake Wanaka at Roys Bay\n    2:              Lake Wanaka at Roys Bay\n    3:              Lake Wanaka at Roys Bay\n    4:              Lake Wanaka at Roys Ba",
        "y\n    5:              Lake Wanaka at Roys Bay\n   ---                                     \n89505: Lake Wakatipu at Willow Place (NIWA)\n89506: Lake Wakatipu at Willow Place (NIWA)\n89507: Lake Wakatipu at Willow Place (NIWA)\n89508: Lake Wakatipu at Willow Place (NIWA)\n89509: Lake Wakatipu at Willow Place (NIWA)\n",
        "> ",
        "ts_df",
        "               TimeStamp     Value   Unit                          ID_full            Param    Source     ID\n                  <char>     <num> <char>                           <char>           <char>    <char> <char>\n  1: 2011-06-01 00:00:00  2410.559    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n  2: 2011-06-02 00:00:00  4560.384    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n  3: 2011-06-03 00:00:00  4523.832    m^3 Discharge Volume.Telemetry@EX331 D",
        "ischarge Volume Telemetry  EX331\n  4: 2011-06-04 00:00:00  4725.545    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n  5: 2011-06-05 00:00:00  5722.757    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n ---                                                                                                        \n358: 2016-11-26 00:00:00 11414.000    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n359: 2016-11-27 00:00:00  9549.000    m^3 D",
        "ischarge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n360: 2016-11-28 00:00:00  7511.000    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n361: 2016-11-29 00:00:00  6121.000    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n362: 2016-11-30 00:00:00  5709.000    m^3 Discharge Volume.Telemetry@EX331 Discharge Volume Telemetry  EX331\n                                                   Site\n                                                 <char>\n  1: Oc",
        "eana Gold at Deepdell Creek at Golden Point Weir\n  2: Oceana Gold at Deepdell Creek at Golden Point Weir\n  3: Oceana Gold at Deepdell Creek at Golden Point Weir\n  4: Oceana Gold at Deepdell Creek at Golden Point Weir\n  5: Oceana Gold at Deepdell Creek at Golden Point Weir\n ---                                                   \n358: Oceana Gold at Deepdell Creek at Golden Point Weir\n359: Oceana Gold at Deepdell Creek at Golden Point Weir\n360: Oceana Gold at Deepdell Creek at Golden Point Weir\n361: Oceana Gol",
        "d at Deepdell Creek at Golden Point Weir\n362: Oceana Gold at Deepdell Creek at Golden Point Weir\n\nRestarting R session...\n\n"
    ]
}